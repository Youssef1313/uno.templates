parameters:
- name: arguments
  type: string
  default: ''

steps:
- checkout: self
  clean: 'true'

- ${{ if contains(parameters.arguments, 'net8.0') }}:
  - template: dotnet-install-windows.yml
    parameters:
      DotNetVersion: 8.0.100-preview.4.23260.5
      UnoCheck_Version: 1.13.0-dev.7
      UnoCheck_Manifest: https://raw.githubusercontent.com/unoplatform/uno.check/d26f9772669da46e1fb0db6ad205ff30842ab5ef/manifests/uno.ui-preview-major.manifest.json

- ${{ if not(contains(parameters.arguments, 'net8.0')) }}:
  - template: dotnet-install-windows.yml

- template: install-windows-sdk.yml
  parameters:
    sdkVersion: 18362

- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: $(Build.DefinitionName)

- powershell: |
      & choco install vswhere
      $msbuildpath=(vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe -nologo)
      echo "##vso[task.setvariable variable=msbuildpath]$msbuildpath"
  displayName: Set MSBUILDPATH

- script: |
      md $(Build.SourcesDirectory)\src\PackageCache
      copy "$(System.ArtifactsDirectory)\$(Build.DefinitionName)\*.nupkg" $(Build.SourcesDirectory)\src\PackageCache
  displayName: Copy Artifacts to PackageCache

- script: dotnet new install "$(System.ArtifactsDirectory)\$(Build.DefinitionName)\Uno.Templates*.nupkg"
  displayName: Install Project Templates

- powershell: |
      dotnet nuget add source -n nuget_local $(Build.SourcesDirectory)\src\PackageCache
      dotnet nuget add source -n uno_dev "https://pkgs.dev.azure.com/uno-platform/1dd81cbd-cb35-41de-a570-b0df3571a196/_packaging/unoplatformdev/nuget/v3/index.json"

      Set-PSDebug -Trace 1
      $ErrorActionPreference = 'Stop'

      # Create app with defaults
      dotnet new unoapp -o UnoApp1 ${{ parameters.arguments }}
      if ($LASTEXITCODE -ne 0)
      {
          throw "Exit code must be zero."
      }

  displayName: Create template app

- template: canary-updater.yml
  parameters:
    MergeBranch: false

- powershell: |
      Set-PSDebug -Trace 1
      $ErrorActionPreference = 'Stop'

      cd UnoApp1

      & $env:msbuildpath /r /m UnoApp1.sln "/bl:$(build.artifactstagingdirectory)\$(Agent.JobName).binlog"
      if ($LASTEXITCODE -ne 0)
      {
          throw "Exit code must be zero."
      }
      cd ..

  displayName: Build template app

- task: CmdLine@2
  inputs:
    workingDirectory: $(build.artifactstagingdirectory)
    script: |
      dotnet tool install --global Basic.CompilerLog
      complog create --projectName="$(Agent.JobName).binlog"
  condition: always()

- task: PublishBuildArtifacts@1
  condition: always()
  retryCountOnTaskFailure: 3
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    ArtifactName: logs
    ArtifactType: Container

- task: PublishBuildArtifacts@1
  condition: always()
  retryCountOnTaskFailure: 3
  inputs:
    PathtoPublish: UnoApp1
    ArtifactName: App-$(Agent.JobName)
    ArtifactType: Container
