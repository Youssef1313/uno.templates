parameters:
- name: arguments
  type: string
  default: ''

- name: projectName
  type: string
  default: ''

steps:
- checkout: none

- powershell: |
    $templateArgs = '${{ parameters.arguments }}'
    Write-Host "TemplateArgs = '$templateArgs'"
    $dotnetVersion = '7.0.400'
    $workloadRestore = 'https://maui.blob.core.windows.net/metadata/rollbacks/7.0.92.json'

    if ($templateArgs.Contains('net8')) {
      $dotnetVersion = '8.0.100-rc.1.23463.5'
      $workloadRestore = 'https://maui.blob.core.windows.net/metadata/rollbacks/8.0.0-rc.1.9171.json'
    }

    Write-Host "DotNetVersion = $dotnetVersion"
    Write-Output "##vso[task.setvariable variable=DotNetVersion]$dotnetVersion"
    Write-Host "WorkloadRestore = $workloadRestore"
    Write-Output "##vso[task.setvariable variable=WorkloadRestore]$workloadRestore"
  displayName: Evaluate Template Args
  condition: and(succeeded(), eq('${{ parameters.arguments }}', 'PLACEHOLDER'))

- template: dotnet-install-windows.yml
  parameters:
    DotNetVersion: $(DotNetVersion)

- powershell: |
      dotnet nuget add source -n nuget_local $(Build.SourcesDirectory)\src\PackageCache
      dotnet nuget add source -n uno_dev "https://pkgs.dev.azure.com/uno-platform/1dd81cbd-cb35-41de-a570-b0df3571a196/_packaging/unoplatformdev/nuget/v3/index.json"
      dotnet nuget add source -n net8 "https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json"
      dotnet nuget add source -n ApiLocal "https://api.nuget.org/v3/index.json"
      Set-PSDebug -Trace 1
      $ErrorActionPreference = 'Stop'

      # Create app with defaults
      dotnet new unoapp -skip -o ${{ parameters.projectName }} ${{ parameters.arguments }}
      if ($LASTEXITCODE -ne 0)
      {
          throw "Exit code must be zero."
      }

  displayName: Create template app

- template: canary-updater.yml
  parameters:
    MergeBranch: false

- powershell: |
    cd ${{ parameters.projectName }}
    & dotnet workload restore --from-rollback-file $(WorkloadRestore) --skip-sign-check
  displayName: Restore workloads

# Enabling hard links should result in faster builds. See https://github.com/dotnet/msbuild/issues/3788
- powershell: |
      Set-PSDebug -Trace 1
      $ErrorActionPreference = 'Stop'

      cd ${{ parameters.projectName }}

      & dotnet build ${{ parameters.projectName }}.sln -p:CreateHardLinksForCopyFilesToOutputDirectoryIfPossible=true -p:CreateHardLinksForCopyAdditionalFilesIfPossible=true -p:CreateHardLinksForCopyLocalIfPossible=true -p:CreateHardLinksForPublishFilesIfPossible=true "/bl:$(build.artifactstagingdirectory)\$(Agent.JobName)_${{ parameters.projectName }}.binlog"
      if ($LASTEXITCODE -ne 0)
      {
          throw "Exit code must be zero."
      }

  displayName: Build template app
