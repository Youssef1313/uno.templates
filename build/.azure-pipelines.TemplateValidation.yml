jobs:
- job: Packages_Validation

  pool:
    vmImage: 'windows-2022'

  # We run two validations per CI machine.
  # When adding a new validation:
  # - If it makes the number of validations odds:
  #    - Add the new validation to templateArgs1, and use the value PLACEHOLDER for templateArgs2
  #    - Note that the value PLACEHOLDER is special cased to not actually run.
  # - If it makes the number of validations even:
  #    - There should already be an existing templateArgs2 with value PLACEHOLDER
  #    - So, replace the PLACEHOLDER with the arguments to test.
  # Notes:
  # 1. We name the matrix elements as "TestCase1_And_TestCase2"
  # 2. Whenever we have an odd number of cases and are using PLACEHOLDER for the second, you can name it as "TestCase1",
  #    But whenever the PLACEHOLDER is replaced with a new test case, don't forget to rename it to "TestCase1_And_TestCase2"
  # 3. It's always best to have a good grouping of test cases to reduce the work done in CI. For example,
  #    always try to group net7 test cases together, and net8 test cases together (same goes for maui and non-maui), etc..
  #    This is to reduce the amount of restore work needs to be done in a single job (running on a single CI machine).
  strategy:
    matrix:
      DefaultArguments_And_Blank:
        templateArgs1: ''
        templateArgs2: '-preset blank'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      SkiaOnlyHeads_And_MobileOnlyHeads:
        templateArgs1: '-platforms gtk wpf linux-fb'
        templateArgs2: '-platforms android ios maccatalyst'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      BlankMarkup_And_BlankNoCpm:
        templateArgs1: '-preset blank -markup csharp'
        templateArgs2: '-preset blank --cpm false'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      MVVM_And_NoCentralPackageManagement:
        templateArgs1: '-presentation mvvm'
        templateArgs2: '--cpm false'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      CSharpMarkup_And_NoHosting:
        templateArgs1: '-markup csharp'
        templateArgs2: '-di false'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      HostingOnly_And_NoConfiguration:
        templateArgs1: '-config false -loc false -http false -log none --navigation blank'
        templateArgs2: '-config false'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      NoLocalization_And_NoHttp:
        templateArgs1: '-loc false'
        templateArgs2: '-http false'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      NoSerilog_And_NoServer:
        templateArgs1: '-log default'
        templateArgs2: '-server false'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      NoServerNoHttp_And_NoTests:
        templateArgs1: '-server false -http false'
        templateArgs2: '-tests none'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      FrameNavigation_And_Net8:
        templateArgs1: '--navigation blank'
        templateArgs2: '-tfm net8.0'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: 'android ios maccatalyst'
        install_net7: true
        install_net8: true
      # https://github.com/unoplatform/uno.templates/issues/22
      Issue22_And_CustomAuthMvux:
        templateArgs1: '-preset blank -tfm net7.0 -platforms android -platforms ios -platforms maccatalyst -platforms macos -platforms windows -platforms wasm -platforms gtk -platforms wpf -platforms linux-fb -presentation mvvm -server false -tests none -vscode false -pwa false -di true -nav regions -log none -theme material'
        templateArgs2: '-preset=recommended -auth=custom'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      CustomAuthMvvm_And_WebAuthMvux:
        templateArgs1: '-preset=recommended -presentation mvvm -auth=custom'
        templateArgs2: '-preset=recommended -auth=web'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      WebAuthMvvm_And_OidcAuthMvux:
        templateArgs1: '-preset=recommended -presentation mvvm -auth=web'
        templateArgs2: '-preset=recommended -auth=oidc'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      OidcAuthMvvm_And_MsalAuthMvux:
        templateArgs1: '-preset=recommended -presentation mvvm -auth=oidc'
        templateArgs2: '-preset=recommended -auth=msal'
        net7_workloads: 'android ios maccatalyst'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      MsalAuthMvvm_And_MauiBlank:
        templateArgs1: '-preset=recommended -presentation mvvm -auth=msal'
        templateArgs2: '-preset=blank -maui'
        net7_workloads: 'android ios maccatalyst maui'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      # Combining MauiRecommended and MauiRecommendedNet8 is causing build failures in CI:
      # C:\hostedtoolcache\windows\dotnet\sdk\8.0.100-rc.1.23463.5\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(485,5): error NETSDK1112: The runtime pack for Microsoft.Maui.Core.Runtime.android was not downloaded. Try running a NuGet restore with the RuntimeIdentifier 'android'. [D:\a\1\s\UnoApp1\UnoApp1.Mobile\UnoApp1.Mobile.csproj::TargetFramework=net7.0-android]
      # They are split for now. When adding a new validation, try to plug it in one of these two PLACEHOLDERs
      MauiRecommended:
        templateArgs1: '-preset=recommended -maui'
        templateArgs2: 'PLACEHOLDER'
        net7_workloads: 'android ios maccatalyst maui'
        net8_workloads: ''
        install_net7: true
        install_net8: false
      MauiRecommendedNet8:
        templateArgs1: '-preset=recommended -maui -tfm net8.0'
        templateArgs2: 'PLACEHOLDER'
        net7_workloads: ''
        net8_workloads: 'android ios maccatalyst maui'
        install_net7: false
        install_net8: true

  variables:
    - name: UseDotNetNativeToolchain
      value: false

  steps:
  - checkout: none

  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: $(Build.DefinitionName)

  - script: |
        md $(Build.SourcesDirectory)\src\PackageCache
        copy "$(System.ArtifactsDirectory)\$(Build.DefinitionName)\*.nupkg" $(Build.SourcesDirectory)\src\PackageCache
    displayName: Copy Artifacts to PackageCache

  - script: dotnet new install "$(System.ArtifactsDirectory)\$(Build.DefinitionName)\Uno.Templates*.nupkg"
    displayName: Install Project Templates

  - powershell: |
        dotnet nuget add source -n nuget_local $(Build.SourcesDirectory)\src\PackageCache
        dotnet nuget add source -n uno_dev "https://pkgs.dev.azure.com/uno-platform/1dd81cbd-cb35-41de-a570-b0df3571a196/_packaging/unoplatformdev/nuget/v3/index.json"
        dotnet nuget add source -n net8 "https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json"
    # TODO: Maybe we shouldn't add these feeds for non-canary builds.
    displayName: Add NuGet feeds

  - task: UseDotNet@2
    displayName: 'Use .NET 7 SDK'
    inputs:
      version: '7.0.400'
    condition: and(succeeded(), eq(variables['install_net7'], 'true'))

  - task: UseDotNet@2
    displayName: 'Use .NET 8 SDK'
    inputs:
      version: '8.0.100-rc.1.23463.5'
    condition: and(succeeded(), eq(variables['install_net8'], 'true'))

  - powershell: |
      & dotnet workload install $(net7_workloads) --from-rollback-file https://maui.blob.core.windows.net/metadata/rollbacks/7.0.92.json --skip-sign-check
    condition: and(succeeded(), ne(variables['net7_workloads'], ''))
    displayName: Install .NET 7 workloads

  - powershell: |
      & dotnet workload install $(net8_workloads) --from-rollback-file https://maui.blob.core.windows.net/metadata/rollbacks/8.0.0-rc.1.9171.json --skip-sign-check
    condition: and(succeeded(), ne(variables['net8_workloads'], ''))
    displayName: Install .NET 8 workloads

  - template: templates/package-validation.yml
    parameters:
      arguments: $(templateArgs1)
      projectName: 'UnoApp1'

  - template: templates/package-validation.yml
    parameters:
      arguments: $(templateArgs2)
      projectName: 'UnoApp2'

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: logs
      ArtifactType: Container
